# Generated by Django 5.1.4 on 2024-12-31 19:51

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Api',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=15)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.TextField(blank=True, null=True)),
                ('timestamp', models.CharField(max_length=50)),
                ('user_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'api',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AutomaticDel',
            fields=[
                ('item_id', models.IntegerField(primary_key=True, serialize=False)),
                ('del_enabled', models.IntegerField()),
                ('del_type', models.IntegerField()),
                ('del_value', models.CharField(max_length=35)),
            ],
            options={
                'db_table': 'automatic_del',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cache',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField()),
                ('label', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('tags', models.TextField(blank=True, null=True)),
                ('id_tree', models.IntegerField()),
                ('perso', models.IntegerField()),
                ('restricted_to', models.CharField(blank=True, max_length=200, null=True)),
                ('login', models.TextField(blank=True, null=True)),
                ('folder', models.TextField()),
                ('author', models.CharField(max_length=50)),
                ('renewal_period', models.IntegerField()),
                ('timestamp', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.TextField(blank=True, null=True)),
                ('encryption_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'cache',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CacheTree',
            fields=[
                ('increment_id', models.SmallAutoField(primary_key=True, serialize=False)),
                ('data', models.JSONField(blank=True, null=True)),
                ('visible_folders', models.TextField()),
                ('timestamp', models.CharField(max_length=50)),
                ('user_id', models.IntegerField()),
                ('folders', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'cache_tree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('level', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('type', models.CharField(blank=True, max_length=50, null=True)),
                ('masked', models.IntegerField()),
                ('order', models.IntegerField()),
                ('encrypted_data', models.IntegerField()),
                ('role_visibility', models.CharField(max_length=255)),
                ('is_mandatory', models.IntegerField()),
                ('regex', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoriesFolders',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('id_category', models.IntegerField()),
                ('id_folder', models.IntegerField()),
            ],
            options={
                'db_table': 'categories_folders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CategoriesItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('field_id', models.IntegerField()),
                ('item_id', models.IntegerField()),
                ('data', models.TextField()),
                ('data_iv', models.TextField()),
                ('encryption_type', models.CharField(max_length=20)),
                ('is_mandatory', models.IntegerField()),
            ],
            options={
                'db_table': 'categories_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DefusePasswords',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('object_id', models.IntegerField()),
                ('password', models.TextField()),
            ],
            options={
                'db_table': 'defuse_passwords',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Emails',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.IntegerField()),
                ('subject', models.TextField()),
                ('body', models.TextField()),
                ('receivers', models.TextField()),
                ('status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'emails',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Export',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('export_tag', models.CharField(max_length=20)),
                ('item_id', models.IntegerField()),
                ('label', models.CharField(max_length=500)),
                ('login', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('pw', models.TextField()),
                ('path', models.CharField(max_length=500)),
                ('email', models.CharField(max_length=500)),
                ('url', models.CharField(max_length=500)),
                ('kbs', models.CharField(max_length=500)),
                ('tags', models.CharField(max_length=500)),
                ('folder_id', models.CharField(max_length=10)),
                ('perso', models.IntegerField()),
                ('restricted_to', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'export',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_item', models.IntegerField()),
                ('name', models.TextField()),
                ('size', models.IntegerField()),
                ('extension', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=255)),
                ('file', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('content', models.TextField(blank=True, null=True)),
                ('confirmed', models.IntegerField()),
            ],
            options={
                'db_table': 'files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=500)),
                ('description', models.TextField(blank=True, null=True)),
                ('pw', models.TextField(blank=True, null=True)),
                ('pw_iv', models.TextField(blank=True, null=True)),
                ('pw_len', models.IntegerField()),
                ('url', models.TextField(blank=True, null=True)),
                ('id_tree', models.CharField(blank=True, max_length=10, null=True)),
                ('perso', models.IntegerField()),
                ('login', models.CharField(blank=True, max_length=200, null=True)),
                ('inactif', models.IntegerField()),
                ('restricted_to', models.CharField(blank=True, max_length=200, null=True)),
                ('anyone_can_modify', models.IntegerField()),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('notification', models.CharField(blank=True, max_length=250, null=True)),
                ('viewed_no', models.IntegerField()),
                ('complexity_level', models.CharField(max_length=3)),
                ('auto_update_pwd_frequency', models.IntegerField()),
                ('auto_update_pwd_next_date', models.CharField(max_length=100)),
                ('encryption_type', models.CharField(max_length=20)),
                ('fa_icon', models.CharField(blank=True, max_length=100, null=True)),
                ('item_key', models.CharField(max_length=500)),
                ('created_at', models.CharField(blank=True, max_length=30, null=True)),
                ('updated_at', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_at', models.CharField(blank=True, max_length=30, null=True)),
            ],
            options={
                'db_table': 'items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemsChange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_id', models.IntegerField()),
                ('label', models.CharField(max_length=255)),
                ('pw', models.TextField()),
                ('login', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('url', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('comment', models.TextField()),
                ('folder_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('timestamp', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'items_change',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ItemsEdition',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('timestamp', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'items_edition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_id', models.IntegerField()),
                ('label', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('author_id', models.IntegerField()),
                ('anyone_can_modify', models.IntegerField()),
            ],
            options={
                'db_table': 'kb',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KbCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'kb_categories',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='KbItems',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('kb_id', models.IntegerField()),
                ('item_id', models.IntegerField()),
            ],
            options={
                'db_table': 'kb_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Languages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('label', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10)),
                ('flag', models.CharField(max_length=50)),
                ('code_poeditor', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'languages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LdapGroupsRoles',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('ldap_group_id', models.IntegerField()),
                ('ldap_group_label', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'ldap_groups_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogItems',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('id_item', models.IntegerField()),
                ('date', models.CharField(max_length=50)),
                ('id_user', models.IntegerField()),
                ('action', models.CharField(blank=True, max_length=250, null=True)),
                ('raison', models.TextField(blank=True, null=True)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('encryption_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'log_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogSystem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('date', models.CharField(max_length=30)),
                ('label', models.TextField()),
                ('qui', models.CharField(max_length=255)),
                ('field_1', models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                'db_table': 'log_system',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Misc',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('intitule', models.CharField(max_length=100)),
                ('valeur', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'misc',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NestedTree',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('parent_id', models.IntegerField()),
                ('title', models.CharField(max_length=255)),
                ('nleft', models.IntegerField()),
                ('nright', models.IntegerField()),
                ('nlevel', models.IntegerField()),
                ('bloquer_creation', models.IntegerField()),
                ('bloquer_modification', models.IntegerField()),
                ('personal_folder', models.IntegerField()),
                ('renewal_period', models.IntegerField()),
                ('fa_icon', models.CharField(max_length=100)),
                ('fa_icon_selected', models.CharField(max_length=100)),
                ('categories', models.TextField()),
                ('nb_items_in_folder', models.IntegerField()),
                ('nb_subfolders', models.IntegerField()),
                ('nb_items_in_subfolders', models.IntegerField()),
            ],
            options={
                'db_table': 'nested_tree',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
            ],
            options={
                'db_table': 'notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Otv',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.TextField()),
                ('code', models.CharField(max_length=100)),
                ('item_id', models.IntegerField()),
                ('originator', models.IntegerField()),
                ('encrypted', models.TextField()),
                ('views', models.IntegerField()),
                ('max_views', models.IntegerField(blank=True, null=True)),
                ('time_limit', models.CharField(blank=True, max_length=100, null=True)),
                ('shared_globaly', models.IntegerField()),
            ],
            options={
                'db_table': 'otv',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Processes',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.CharField(max_length=50)),
                ('started_at', models.CharField(blank=True, max_length=50, null=True)),
                ('updated_at', models.CharField(blank=True, max_length=50, null=True)),
                ('finished_at', models.CharField(blank=True, max_length=50, null=True)),
                ('process_id', models.IntegerField(blank=True, null=True)),
                ('process_type', models.CharField(max_length=100)),
                ('output', models.TextField(blank=True, null=True)),
                ('arguments', models.JSONField()),
                ('is_in_progress', models.IntegerField()),
                ('item_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'processes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessesLogs',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.CharField(max_length=20)),
                ('job', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=10)),
                ('updated_at', models.CharField(blank=True, max_length=20, null=True)),
                ('finished_at', models.CharField(blank=True, max_length=20, null=True)),
                ('treated_objects', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'processes_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcessesTasks',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('process_id', models.IntegerField()),
                ('created_at', models.CharField(max_length=50)),
                ('updated_at', models.CharField(blank=True, max_length=50, null=True)),
                ('finished_at', models.CharField(blank=True, max_length=50, null=True)),
                ('task', models.JSONField()),
                ('system_process_id', models.IntegerField(blank=True, null=True)),
                ('is_in_progress', models.IntegerField()),
                ('sub_task_in_progress', models.IntegerField()),
            ],
            options={
                'db_table': 'processes_tasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RestrictionToRoles',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('item_id', models.IntegerField()),
            ],
            options={
                'db_table': 'restriction_to_roles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tree_id', models.IntegerField()),
                ('fonction_id', models.IntegerField()),
                ('authorized', models.IntegerField()),
            ],
            options={
                'db_table': 'rights',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolesTitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('allow_pw_change', models.IntegerField()),
                ('complexity', models.IntegerField()),
                ('creator_id', models.IntegerField()),
            ],
            options={
                'db_table': 'roles_title',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RolesValues',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_id', models.IntegerField()),
                ('folder_id', models.IntegerField()),
                ('type', models.CharField(max_length=5)),
            ],
            options={
                'db_table': 'roles_values',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharekeysFields',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('share_key', models.TextField()),
            ],
            options={
                'db_table': 'sharekeys_fields',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharekeysFiles',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('share_key', models.TextField()),
            ],
            options={
                'db_table': 'sharekeys_files',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharekeysItems',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('share_key', models.TextField()),
            ],
            options={
                'db_table': 'sharekeys_items',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharekeysLogs',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('share_key', models.TextField()),
            ],
            options={
                'db_table': 'sharekeys_logs',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharekeysSuggestions',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('object_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('share_key', models.TextField()),
            ],
            options={
                'db_table': 'sharekeys_suggestions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('pw', models.TextField()),
                ('pw_iv', models.TextField()),
                ('pw_len', models.IntegerField()),
                ('description', models.TextField()),
                ('author_id', models.IntegerField()),
                ('folder_id', models.IntegerField()),
                ('comment', models.TextField()),
                ('suggestion_type', models.CharField(max_length=10)),
                ('encryption_type', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'suggestion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=30)),
                ('item_id', models.IntegerField()),
            ],
            options={
                'db_table': 'tags',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Templates',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('item_id', models.IntegerField()),
                ('category_id', models.IntegerField()),
            ],
            options={
                'db_table': 'templates',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tokens',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('token', models.CharField(max_length=255)),
                ('reason', models.CharField(max_length=255)),
                ('creation_timestamp', models.CharField(max_length=50)),
                ('end_timestamp', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tokens',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.CharField(max_length=500, unique=True)),
                ('pw', models.CharField(max_length=400)),
                ('groupes_visibles', models.CharField(max_length=1000)),
                ('derniers', models.TextField(blank=True, null=True)),
                ('key_tempo', models.CharField(blank=True, max_length=100, null=True)),
                ('last_pw_change', models.CharField(blank=True, max_length=30, null=True)),
                ('last_pw', models.TextField(blank=True, null=True)),
                ('admin', models.IntegerField()),
                ('fonction_id', models.CharField(blank=True, max_length=1000, null=True)),
                ('groupes_interdits', models.CharField(blank=True, max_length=1000, null=True)),
                ('last_connexion', models.CharField(blank=True, max_length=30, null=True)),
                ('gestionnaire', models.IntegerField()),
                ('email', models.CharField(max_length=300)),
                ('favourites', models.CharField(blank=True, max_length=1000, null=True)),
                ('latest_items', models.CharField(blank=True, max_length=1000, null=True)),
                ('personal_folder', models.IntegerField()),
                ('disabled', models.IntegerField()),
                ('no_bad_attempts', models.IntegerField()),
                ('can_create_root_folder', models.IntegerField()),
                ('read_only', models.IntegerField()),
                ('timestamp', models.CharField(max_length=30)),
                ('user_language', models.CharField(max_length=50)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('lastname', models.CharField(blank=True, max_length=100, null=True)),
                ('session_end', models.CharField(blank=True, max_length=30, null=True)),
                ('isadministratedbyrole', models.IntegerField(db_column='isAdministratedByRole')),
                ('psk', models.CharField(blank=True, max_length=400, null=True)),
                ('ga', models.CharField(blank=True, max_length=50, null=True)),
                ('ga_temporary_code', models.CharField(max_length=20)),
                ('avatar', models.CharField(blank=True, max_length=1000, null=True)),
                ('avatar_thumb', models.CharField(blank=True, max_length=1000, null=True)),
                ('upgrade_needed', models.IntegerField()),
                ('treeloadstrategy', models.CharField(max_length=30)),
                ('can_manage_all_users', models.IntegerField()),
                ('usertimezone', models.CharField(max_length=50)),
                ('agses_usercardid', models.CharField(db_column='agses-usercardid', max_length=50)),
                ('encrypted_psk', models.TextField(blank=True, null=True)),
                ('user_ip', models.CharField(max_length=400)),
                ('user_ip_lastdate', models.CharField(blank=True, max_length=50, null=True)),
                ('yubico_user_key', models.CharField(max_length=100)),
                ('yubico_user_id', models.CharField(max_length=100)),
                ('public_key', models.TextField(blank=True, null=True)),
                ('private_key', models.TextField(blank=True, null=True)),
                ('special', models.CharField(max_length=250)),
                ('auth_type', models.CharField(max_length=200)),
                ('is_ready_for_usage', models.IntegerField()),
                ('otp_provided', models.IntegerField()),
                ('roles_from_ad_groups', models.CharField(blank=True, max_length=1000, null=True)),
                ('ongoing_process_id', models.CharField(blank=True, max_length=100, null=True)),
                ('mfa_enabled', models.IntegerField()),
                ('created_at', models.CharField(blank=True, max_length=30, null=True)),
                ('updated_at', models.CharField(blank=True, max_length=30, null=True)),
                ('deleted_at', models.CharField(blank=True, max_length=30, null=True)),
                ('keys_recovery_time', models.CharField(blank=True, max_length=500, null=True)),
                ('aes_iv', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
