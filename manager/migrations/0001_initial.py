# Generated by Django 5.1.4 on 2025-01-03 09:41

import django.contrib.auth.models
import django.db.models.deletion
import jsonfield.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CacheEntry',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.IntegerField()),
                ('label', models.CharField(max_length=500)),
                ('description', models.TextField(null=True)),
                ('tags', models.TextField(null=True)),
                ('id_tree', models.IntegerField()),
                ('perso', models.BooleanField()),
                ('restricted_to', models.CharField(max_length=200, null=True)),
                ('login', models.TextField(null=True)),
                ('folder', models.TextField()),
                ('author', models.CharField(max_length=50)),
                ('renewal_period', models.SmallIntegerField(default=0)),
                ('timestamp', models.CharField(max_length=50, null=True)),
                ('url', models.TextField(null=True)),
                ('encryption_type', models.CharField(default='0', max_length=50)),
            ],
            options={
                'db_table': 'cache',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('login', models.CharField(max_length=500, unique=True)),
                ('pw', models.CharField(max_length=400)),
                ('visible_groups', models.CharField(max_length=1000)),
                ('last_items', models.TextField(null=True)),
                ('key_tempo', models.CharField(max_length=100, null=True)),
                ('last_pw_change', models.CharField(max_length=30, null=True)),
                ('last_pw', models.TextField(null=True)),
                ('admin', models.BooleanField(default=False)),
                ('functions', models.CharField(max_length=1000, null=True)),
                ('forbidden_groups', models.CharField(max_length=1000, null=True)),
                ('last_connection', models.CharField(max_length=30, null=True)),
                ('manager', models.IntegerField(default=0)),
                ('favorites', models.CharField(max_length=1000, null=True)),
                ('latest_items', models.CharField(max_length=1000, null=True)),
                ('personal_folder', models.BooleanField(default=False)),
                ('disabled', models.BooleanField(default=False)),
                ('no_bad_attempts', models.BooleanField(default=False)),
                ('can_create_root_folder', models.BooleanField(default=False)),
                ('read_only', models.BooleanField(default=False)),
                ('timestamp', models.CharField(default='0', max_length=30)),
                ('language', models.CharField(default='0', max_length=50)),
                ('name', models.CharField(max_length=100, null=True)),
                ('lastname', models.CharField(max_length=100, null=True)),
                ('session_end', models.CharField(max_length=30, null=True)),
                ('is_administrated_by_role', models.BooleanField(default=False)),
                ('psk', models.CharField(max_length=400, null=True)),
                ('ga', models.CharField(max_length=50, null=True)),
                ('ga_temporary_code', models.CharField(default='none', max_length=20)),
                ('avatar', models.CharField(max_length=1000, null=True)),
                ('avatar_thumb', models.CharField(max_length=1000, null=True)),
                ('upgrade_needed', models.BooleanField(default=False)),
                ('tree_load_strategy', models.CharField(default='full', max_length=30)),
                ('can_manage_all_users', models.BooleanField(default=False)),
                ('timezone', models.CharField(default='not_defined', max_length=50)),
                ('agses_user_card_id', models.CharField(default='0', max_length=50)),
                ('encrypted_psk', models.TextField(null=True)),
                ('user_ip', models.CharField(default='none', max_length=400)),
                ('user_ip_lastdate', models.CharField(max_length=50, null=True)),
                ('yubico_user_key', models.CharField(default='none', max_length=100)),
                ('yubico_user_id', models.CharField(default='none', max_length=100)),
                ('public_key', models.TextField(null=True)),
                ('private_key', models.TextField(null=True)),
                ('special', models.CharField(default='none', max_length=250)),
                ('auth_type', models.CharField(default='local', max_length=200)),
                ('is_ready_for_usage', models.BooleanField(default=False)),
                ('otp_provided', models.BooleanField(default=False)),
                ('roles_from_ad_groups', models.CharField(max_length=1000, null=True)),
                ('ongoing_process_id', models.CharField(max_length=100, null=True)),
                ('mfa_enabled', models.BooleanField(default=True)),
                ('created_at', models.CharField(max_length=30, null=True)),
                ('updated_at', models.CharField(max_length=30, null=True)),
                ('deleted_at', models.CharField(max_length=30, null=True)),
                ('keys_recovery_time', models.CharField(max_length=500, null=True)),
                ('aes_iv', models.TextField(null=True)),
            ],
            options={
                'db_table': 'users',
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=500)),
                ('description', models.TextField(null=True)),
                ('pw', models.TextField(null=True)),
                ('pw_iv', models.TextField(null=True)),
                ('pw_len', models.IntegerField(default=0)),
                ('url', models.TextField(null=True)),
                ('id_tree', models.CharField(max_length=10, null=True)),
                ('perso', models.BooleanField(default=False)),
                ('login', models.CharField(max_length=200, null=True)),
                ('inactif', models.BooleanField(default=False)),
                ('restricted_to', models.CharField(max_length=200, null=True)),
                ('anyone_can_modify', models.BooleanField(default=False)),
                ('email', models.CharField(max_length=100, null=True)),
                ('notification', models.CharField(max_length=250, null=True)),
                ('viewed_no', models.IntegerField(default=0)),
                ('complexity_level', models.CharField(default='-1', max_length=3)),
                ('auto_update_pwd_frequency', models.SmallIntegerField(default=0)),
                ('auto_update_pwd_next_date', models.CharField(default='0', max_length=100)),
                ('encryption_type', models.CharField(default='not_set', max_length=20)),
                ('fa_icon', models.CharField(max_length=100, null=True)),
                ('item_key', models.CharField(default='-1', max_length=500)),
                ('created_at', models.CharField(max_length=30, null=True)),
                ('updated_at', models.CharField(max_length=30, null=True)),
                ('deleted_at', models.CharField(max_length=30, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'items',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.IntegerField()),
                ('subject', models.TextField()),
                ('body', models.TextField()),
                ('receivers', models.TextField()),
                ('status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'emails',
            },
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('nleft', models.IntegerField(default=0)),
                ('nright', models.IntegerField(default=0)),
                ('nlevel', models.IntegerField(default=0)),
                ('bloquer_creation', models.BooleanField(default=False)),
                ('bloquer_modification', models.BooleanField(default=False)),
                ('personal_folder', models.BooleanField(default=False)),
                ('renewal_period', models.IntegerField(default=0)),
                ('fa_icon', models.CharField(default='fas fa-folder', max_length=100)),
                ('fa_icon_selected', models.CharField(default='fas fa-folder-open', max_length=100)),
                ('categories', jsonfield.fields.JSONField()),
                ('nb_items_in_folder', models.IntegerField(default=0)),
                ('nb_subfolders', models.IntegerField(default=0)),
                ('nb_items_in_subfolders', models.IntegerField(default=0)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='manager.folder')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'nested_tree',
            },
        ),
        migrations.CreateModel(
            name='KBCategory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'kb_categories',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('label', models.CharField(max_length=50)),
                ('code', models.CharField(max_length=10)),
                ('flag', models.CharField(max_length=50)),
                ('code_poeditor', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'languages',
            },
        ),
        migrations.CreateModel(
            name='Misc',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('intitule', models.CharField(max_length=100)),
                ('valeur', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'misc',
            },
        ),
        migrations.CreateModel(
            name='ProcessLog',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.CharField(max_length=20)),
                ('job', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=10)),
                ('updated_at', models.CharField(max_length=20, null=True)),
                ('finished_at', models.CharField(max_length=20, null=True)),
                ('treated_objects', models.CharField(max_length=20, null=True)),
            ],
            options={
                'db_table': 'processes_logs',
            },
        ),
        migrations.CreateModel(
            name='SystemLog',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=20)),
                ('date', models.CharField(max_length=30)),
                ('label', models.TextField()),
                ('user', models.CharField(max_length=255)),
                ('field_1', models.CharField(max_length=250, null=True)),
            ],
            options={
                'db_table': 'log_system',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('level', models.IntegerField()),
                ('description', models.TextField(null=True)),
                ('type', models.CharField(blank=True, max_length=50)),
                ('masked', models.BooleanField(default=False)),
                ('order', models.IntegerField(default=0)),
                ('encrypted_data', models.BooleanField(default=True)),
                ('role_visibility', models.CharField(default='all', max_length=255)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('regex', models.CharField(max_length=255, null=True)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='children', to='manager.category')),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CacheTree',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('data', jsonfield.fields.JSONField(null=True)),
                ('visible_folders', models.TextField()),
                ('timestamp', models.CharField(max_length=50)),
                ('folders', jsonfield.fields.JSONField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'cache_tree',
            },
        ),
        migrations.CreateModel(
            name='API',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=15)),
                ('label', models.CharField(max_length=255, null=True)),
                ('value', models.TextField(null=True)),
                ('timestamp', models.CharField(max_length=50)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='manager.customuser')),
            ],
            options={
                'db_table': 'api',
            },
        ),
        migrations.CreateModel(
            name='DeletionConfiguration',
            fields=[
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='manager.item')),
                ('del_enabled', models.BooleanField()),
                ('del_type', models.BooleanField()),
                ('del_value', models.CharField(max_length=35)),
            ],
            options={
                'db_table': 'automatic_del',
            },
        ),
        migrations.CreateModel(
            name='DefusePassword',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=100)),
                ('password', models.TextField()),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
            ],
            options={
                'db_table': 'defuse_passwords',
            },
        ),
        migrations.CreateModel(
            name='CategoryItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('field_id', models.IntegerField()),
                ('data', models.TextField()),
                ('data_iv', models.TextField()),
                ('encryption_type', models.CharField(default='not_set', max_length=20)),
                ('is_mandatory', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
            ],
            options={
                'db_table': 'categories_items',
            },
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.TextField()),
                ('size', models.IntegerField()),
                ('extension', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=255)),
                ('file', models.CharField(max_length=50)),
                ('status', models.CharField(default='0', max_length=50)),
                ('content', models.BinaryField(null=True)),
                ('confirmed', models.IntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
            ],
            options={
                'db_table': 'files',
            },
        ),
        migrations.AddField(
            model_name='item',
            name='folder',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder'),
        ),
        migrations.CreateModel(
            name='Export',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('export_tag', models.CharField(max_length=20)),
                ('label', models.CharField(max_length=500)),
                ('login', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('pw', models.TextField()),
                ('path', models.CharField(max_length=500)),
                ('email', models.CharField(default='none', max_length=500)),
                ('url', models.CharField(default='none', max_length=500)),
                ('kbs', models.CharField(default='none', max_length=500)),
                ('tags', models.CharField(default='none', max_length=500)),
                ('perso', models.BooleanField(default=False)),
                ('restricted_to', models.CharField(max_length=200, null=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder')),
            ],
            options={
                'db_table': 'export',
            },
        ),
        migrations.CreateModel(
            name='CategoryFolder',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.category')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder')),
            ],
            options={
                'db_table': 'categories_folders',
            },
        ),
        migrations.CreateModel(
            name='ItemChange',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(default='none', max_length=255)),
                ('pw', models.TextField()),
                ('login', models.CharField(default='none', max_length=255)),
                ('email', models.CharField(default='none', max_length=255)),
                ('url', models.CharField(default='none', max_length=255)),
                ('description', models.TextField()),
                ('comment', models.TextField()),
                ('timestamp', models.CharField(default='none', max_length=50)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'items_change',
            },
        ),
        migrations.CreateModel(
            name='ItemEdition',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.CharField(max_length=50)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'items_edition',
            },
        ),
        migrations.CreateModel(
            name='ItemLog',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.CharField(max_length=50)),
                ('action', models.CharField(max_length=250, null=True)),
                ('reason', models.TextField(null=True)),
                ('old_value', models.TextField(null=True)),
                ('encryption_type', models.CharField(default='not_set', max_length=20)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'log_items',
            },
        ),
        migrations.CreateModel(
            name='KB',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('anyone_can_modify', models.BooleanField(default=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.kbcategory')),
            ],
            options={
                'db_table': 'kb',
            },
        ),
        migrations.CreateModel(
            name='KBItem',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('kb', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.kb')),
            ],
            options={
                'db_table': 'kb_items',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'notification',
            },
        ),
        migrations.CreateModel(
            name='OTV',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('timestamp', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=100)),
                ('encrypted', models.TextField()),
                ('views', models.IntegerField(default=0)),
                ('max_views', models.IntegerField(null=True)),
                ('time_limit', models.CharField(max_length=100, null=True)),
                ('shared_globaly', models.BooleanField(default=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('originator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'otv',
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.CharField(max_length=50)),
                ('started_at', models.CharField(max_length=50, null=True)),
                ('updated_at', models.CharField(max_length=50, null=True)),
                ('finished_at', models.CharField(max_length=50, null=True)),
                ('process_id', models.IntegerField(null=True)),
                ('process_type', models.CharField(max_length=100)),
                ('output', models.TextField(null=True)),
                ('arguments', jsonfield.fields.JSONField()),
                ('is_in_progress', models.BooleanField(default=False)),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
            ],
            options={
                'db_table': 'processes',
            },
        ),
        migrations.CreateModel(
            name='ProcessTask',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.CharField(max_length=50)),
                ('updated_at', models.CharField(max_length=50, null=True)),
                ('finished_at', models.CharField(max_length=50, null=True)),
                ('task', jsonfield.fields.JSONField()),
                ('system_process_id', models.IntegerField(null=True)),
                ('is_in_progress', models.BooleanField(default=False)),
                ('sub_task_in_progress', models.BooleanField(default=False)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.process')),
            ],
            options={
                'db_table': 'processes_tasks',
            },
        ),
        migrations.CreateModel(
            name='RoleTitle',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=50)),
                ('allow_pw_change', models.BooleanField(default=False)),
                ('complexity', models.IntegerField(default=0)),
                ('creator', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'roles_title',
            },
        ),
        migrations.CreateModel(
            name='Right',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('authorized', models.BooleanField(default=False)),
                ('tree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder')),
                ('function', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.roletitle')),
            ],
            options={
                'db_table': 'rights',
            },
        ),
        migrations.CreateModel(
            name='RestrictionToRole',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.roletitle')),
            ],
            options={
                'db_table': 'restriction_to_roles',
            },
        ),
        migrations.CreateModel(
            name='LDAPGroupRole',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('ldap_group_id', models.IntegerField()),
                ('ldap_group_label', models.CharField(max_length=255)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.roletitle')),
            ],
            options={
                'db_table': 'ldap_groups_roles',
            },
        ),
        migrations.CreateModel(
            name='RoleValue',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(default='R', max_length=5)),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.roletitle')),
            ],
            options={
                'db_table': 'roles_values',
            },
        ),
        migrations.CreateModel(
            name='ShareKeyField',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('share_key', models.TextField()),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='share_key_fields', to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'sharekeys_fields',
            },
        ),
        migrations.CreateModel(
            name='ShareKeyFile',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('share_key', models.TextField()),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.file')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'sharekeys_files',
            },
        ),
        migrations.CreateModel(
            name='ShareKeyItem',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('share_key', models.TextField()),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'sharekeys_items',
            },
        ),
        migrations.CreateModel(
            name='ShareKeyLog',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('share_key', models.TextField()),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'sharekeys_logs',
            },
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=255)),
                ('pw', models.TextField()),
                ('pw_iv', models.TextField()),
                ('pw_len', models.IntegerField()),
                ('description', models.TextField()),
                ('comment', models.TextField()),
                ('suggestion_type', models.CharField(default='new', max_length=10)),
                ('encryption_type', models.CharField(default='not_set', max_length=20)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
                ('folder', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.folder')),
            ],
            options={
                'db_table': 'suggestion',
            },
        ),
        migrations.CreateModel(
            name='ShareKeySuggestion',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('share_key', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.suggestion')),
            ],
            options={
                'db_table': 'sharekeys_suggestions',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('tag', models.CharField(max_length=30)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
            ],
            options={
                'db_table': 'tags',
            },
        ),
        migrations.CreateModel(
            name='Template',
            fields=[
                ('increment_id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.category')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.item')),
            ],
            options={
                'db_table': 'templates',
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255)),
                ('reason', models.CharField(max_length=255)),
                ('creation_timestamp', models.CharField(max_length=50)),
                ('end_timestamp', models.CharField(max_length=50)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.customuser')),
            ],
            options={
                'db_table': 'tokens',
            },
        ),
    ]
